Git: - Version control system for tracking changes in source code during software development. 

GitHub: - GitHub is a web-based git repository hosting service, which offers all the distributed revision control. 

Staging Area: - all the important information that is relevant to the project is saved in the staging area and then I can track all the files that are modified. 

Working Directory: - I saved that code into the working directory and all the changes are made in the working directory. 

Commit: - I can make all the changes in the file and save in the local system and then ready for commit / I want to create a snapshot saved in local system / tell the system i solved some bug and all and we are ready to push. 

.git file:-  stores all the commit 
 
-> git --version: - To check the version of the Git 
-> git config --global user.name: - To set the username  
-> git config -global user. Email: - To set the email 
-> git config -global -list: - to check the details  
-> git help :- Display the main help documentation, showing a list of commonly used Git commands. 
-> git init :- Initializes a new Git repository in the current directory. 
-> git clone <repository URL>: - this Clones a repository from a remote server to your local machine. 
-> git clone -branch <branch name> <repository URL>: - Clones a specific branch from a repository git add <file>: - Adds a specific file to the staging area. 
-> git diff: Shows the changes between the working directory and the staging area (index). 
-> git diff <commit1> <commit2>: - Displays the differences between two commits. 
-> git diff -staged or git diff -cached: - Displays the changes between the staging area (index) and the last commit. 
-> Git restore <file>: - Restores the file in the working directory to its state in the last commit. 
-> git reset <commit>: - Moves the branch pointer to a specified commit, resetting the staging area and the working directory to match the specified commit git rm <file>:- Removes a file from both the working directory and the repository, staging the deletion. git branch: - Lists all branches in the repository. git branch <branch-name>:- Creates a new branch with the specified name. git branch -d <branch-name>:- Deletes the specified branch. git branch -a: - Lists all local and remote branches. git checkout <branch-name> :- Switches to the specified branch. git checkout -b <new-branch-name> :- Creates a new branch and switches to it. 
-> git merge <branch> : - Merges the specified branch into the current branch. 
-> git log : - Displays the commit history of the current branch. 
-> git log <branch-d :- Displays the commit history of the specified branch. 
-> git log -all : - Displays the commit history of all branches. 
-> git stash : - Stashes the changes in the working directory, allowing you to switch to a different branch or commit without committing the changes. git stash list :- Lists all stashes in the repository. 
-> git fetch : - Retrieves change from a remote repository, including new branches and commit. 
-> git fetch <remote> : - Retrieves change from the specified remote repository. 
-> git pull :- Fetches changes from the remote repository and merges them into the current branch. 
-> git pull -rebase : - Fetches changes from the remote repository and rebases the current branch onto the updated branch. 
-> git remote add <name> <url> : - Adds a new remote repository with the specified name and URL. git show : - Shows the details of a specific commit, including its changes. 
-> git revert <commit> :- Creates a new commit that undoes the changes introduced by the specified commit. 
-> git rebase <branch> :- Reapplies commits on the current branch onto the tip of the specified branch. 
 
 
